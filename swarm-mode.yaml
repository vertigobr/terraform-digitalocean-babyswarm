---

- hosts: all
  tasks:
  - name: "get docker info"
    shell: docker info
    register: docker_info
    changed_when: False
#  - name: "get inventory_hostname"
#    debug:
#      msg: "Inventory hostname: {{ inventory_hostname }}"
#  - name: "get host vars"
#    debug: var=hostvars
  - name: Declare the address of the first Swarm manager as a fact.
    set_fact:
      swarm_manager_address: "{{ ansible_eth0['ipv4']['address'] }}:2377"
    when: inventory_hostname == groups['swarm-manager'][0]
  - name: Distribute the fact containing address of the first Swarm manager.
    set_fact:
      swarm_manager_address: "{{ hostvars[groups['swarm-manager'][0]]['swarm_manager_address'] }}"
    when: inventory_hostname != groups['swarm-manager'][0]

# swarm manager
  - name: "create primary swarm manager"
    shell: docker swarm init --advertise-addr {{ ansible_eth0['ipv4']['address'] }}
    when: "docker_info.stdout.find('Swarm: inactive') != -1 and inventory_hostname == groups['swarm-manager'][0]"
  - name: "get docker swarm worker token"
    shell: docker swarm join-token -q worker
    register: worker_token
    changed_when: False
    when: inventory_hostname == groups['swarm-manager'][0]
#  - name: "save docker swarm worker token for later use"
#    set_fact:
#      worker_token: "{{ worker_token_reg.stdout }}"
#    when: inventory_hostname != groups['swarm-manager'][0]

# swarm-worker
#  - name: "debug token"
#    debug: var=hostvars[groups['swarm-manager'][0]]['worker_token']['stdout']
  - name: "join swarm as a worker"
    shell: "docker swarm join --token {{ hostvars[groups['swarm-manager'][0]]['worker_token']['stdout'] }} {{ swarm_manager_address }}"
    when: "docker_info.stdout.find('Swarm: inactive') != -1 and inventory_hostname in groups['swarm-worker']"
    retries: 3
    delay: 20

